// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  password      String
  name          String?
  role          UserRole  @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  inscriptions  Inscription[]
  securityLogs  SecurityLog[]
}

model Formation {
  id            String    @id @default(cuid())
  title         String
  description   String?
  duration      Int // en heures
  price         Float
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  inscriptions  Inscription[]
}

model Inscription {
  id            String    @id @default(cuid())
  userId        String
  formationId   String
  status        String    @default("pending") // pending, active, completed
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  user          User      @relation(fields: [userId], references: [id])
  formation     Formation @relation(fields: [formationId], references: [id])
  payment       Payment?
}

model Payment {
  id            String    @id @default(cuid())
  inscriptionId String    @unique
  amount        Float
  currency      String    @default("eur")
  status        String    // succeeded, pending, failed
  paymentIntentId String  @unique // ID de l'intention de paiement Stripe
  createdAt     DateTime  @default(now())
  inscription   Inscription @relation(fields: [inscriptionId], references: [id])
}

model SecurityLog {
  id        String   @id @default(cuid())
  userId    String
  ipAddress String
  action    String   // e.g., 'login', 'logout', 'failed_login'
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

// Modèle pour tracker les visiteurs
model Visitor {
  id              String   @id @default(cuid())
  ipAddress       String
  userAgent       String?
  referrer        String?
  pageUrl         String
  sessionId       String
  country         String?
  city            String?
  region          String?
  timezone        String?
  deviceType      String?  // mobile, desktop, tablet
  browser         String?
  os              String?
  screenResolution String?
  language        String?
  visitDuration   Int?     // en secondes
  bounceRate      Boolean  @default(true)
  isReturning     Boolean  @default(false)
  utmSource       String?
  utmMedium       String?
  utmCampaign     String?
  utmTerm         String?
  utmContent      String?
  createdAt       DateTime @default(now())
  lastActivity    DateTime @default(now())
  pageViews       PageView[]
}

// Modèle pour tracker les pages vues
model PageView {
  id        String   @id @default(cuid())
  visitorId String
  pageUrl   String
  pageTitle String?
  timeSpent Int?     // en secondes
  createdAt DateTime @default(now())
  visitor   Visitor  @relation(fields: [visitorId], references: [id])
}

enum UserRole {
  USER
  ADMIN
  EXECUTIVE
}
